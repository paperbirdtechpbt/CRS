@inject Microsoft.AspNetCore.Mvc.Localization.IViewLocalizer localizer
@{
	ViewData["Title"] = @localizer["Add Case"];

}

<!-- Content Header (Page header) -->
<section class="content-header">
 <div class="container-fluid">
  <div class="row mb-2">
   <div class="col-sm-6">
	<h1>@localizer["Case Form"]</h1>
   </div>
   <div class="col-sm-6">
	<ol class="breadcrumb float-sm-right">
	 <li class="breadcrumb-item"><a href="#">@localizer["Home"]</a></li>
	 <li class="breadcrumb-item active">@localizer["Add Case"]</li>
	</ol>
   </div>
  </div>
 </div><!-- /.container-fluid -->
</section>

<!-- Main content -->
<section class="content">

 <div class="container-fluid">

  <!-- SELECT2 EXAMPLE -->
  <div class="card card-default">
   <div class="card-header">
	<h3 class="card-title">@localizer["Add Case"]</h3>

	<div class="card-tools">
	 <button type="button" class="btn btn-tool" data-card-widget="collapse">
	  <i class="fas fa-minus"></i>
	 </button>
	 <button type="button" class="btn btn-tool" data-card-widget="remove">
	  <i class="fas fa-times"></i>
	 </button>
	</div>
   </div>
   <!-- /.card-header -->
   <div class="card-body">
	<div class="row">
	 <div class="col-md-6">
	  <div class="form-group">
	   <label>@localizer["Case Type"]</label>
	   <select class="form-control select2" style="width: 100%;" id="ddlCaseType" onchange="callChangefunc(this.value)">
	   </select>
	  </div>
	 </div>
	 <div class="col-md-6">
	  <!-- /.form-group -->
	  <div class="form-group">
	   <label>@localizer["Case Number"]</label>
	   <input type="text" class="form-control" id="txtcaseno" disabled>
	  </div>
	  <!-- /.form-group -->
	 </div>
	 <div class="col-md-6">
	  <div class="form-group">
	   <div class="form-group">
		<label>@localizer["Complainer Name"]</label>
		<input type="text" class="form-control" id="txtcomplainername">
	   </div>
	  </div>
	 </div>
	 <div class="col-md-6">
	  <!-- /.form-group -->
	  <div class="form-group">
	   <label>@localizer["Complainer ContactNo"]</label>
	   <input type="text" class="form-control" id="txtcomplainercontactno">
	  </div>
	  <!-- /.form-group -->
	 </div>
	 <div class="col-md-6">
	  <!-- /.form-group -->
	  <div class="form-group">
	   <label>@localizer["Complainer Address"]</label>
	   <textarea class="form-control" id="txtcomplaineraddress"> </textarea>
	  </div>
	  <!-- /.form-group -->
	 </div>
	</div>
	<!-- /.row -->


   </div>
   <!-- /.card-body -->
   <div class="card-footer">
   </div>
  </div>
  <!-- /.card -->
  <!-- general form elements disabled -->
  <div class="card card-warning">
   <div class="card-header">
	<h3 class="card-title">@localizer["Case Details"]</h3>
   </div>
   <!-- /.card-header -->
   <div class="card-body" id="que_content">
   </div>
			@*<div class="form-group">
				<label>Date:</label>
				<div class="input-group date" id="reservationdate" data-target-input="nearest">
				<input type="text" class="form-control datetimepicker-input" data-target="#reservationdate" />
				<div class="input-group-append" data-target="#reservationdate" data-toggle="datetimepicker">
				<div class="input-group-text"><i class="fa fa-calendar"></i></div>
				</div>
				</div>
				</div>*@
   <!-- /.card-body -->
   <div class="card-footer">
	<button type="button" id="btnsubmit" class="float-right btn btn-success" onclick="submitfunc()">@localizer["Submit"]</button>
   </div>
  </div>


 </div>
 <!-- /.container-fluid -->
</section>
<!-- /.content -->
@section Scripts {


<script>

	var data = [

		{ CrimeHeadName: 'Q1 is Type of Textbox', mstCrimeTypeID: 1, mstCrimeHeadTypeID: '1', value: [''] },
		{ CrimeHeadName: 'Q2 is mstCrimeHeadTypeID of RadioButton', mstCrimeTypeID: 2, mstCrimeHeadTypeID: '2', value: ['Yes', 'NO'] },
		{ CrimeHeadName: 'Q3 is mstCrimeHeadTypeID of Numric Textbox', mstCrimeTypeID: 3, mstCrimeHeadTypeID: '3', value: [''] },
		{ CrimeHeadName: 'Q4 is mstCrimeHeadTypeID of Dropdown', mstCrimeTypeID: 4, mstCrimeHeadTypeID: '4', value: ['ddl1', 'ddl2', 'ddl3', 'ddl4', 'ddl5'] },
		{ CrimeHeadName: 'Q5 is mstCrimeHeadTypeID of Calander', mstCrimeTypeID: 5, mstCrimeHeadTypeID: '5', value: [''] },
		{ CrimeHeadName: 'Q6 is mstCrimeHeadTypeID of Textarea', mstCrimeTypeID: 6, mstCrimeHeadTypeID: '6', value: [''] }
	];



	var x = document.getElementById("btnsubmit");
	var HeadJson;
	//if (x.style.display === "none") {
	//    x.style.display = "block";
	//} else {
	//    x.style.display = "none";
	//}
	$(document).ready(function () {


		x.style.display = "none";

		var random = getRandomArbitrary(0, 2);
		document.getElementById("txtcaseno").value = random;


		$("#ddlCaseType").select2({
			placeholder: 'Select Case Type',
			allowClear: true,
			width: "100%"
		});


		//alert('hi');
		GETMSTCrimeType();
		//dynamic(data);

	});

	function callChangefunc(id) {
		//alert(id);
		x.style.display = "none";
		$.ajax({
			type: "POST",
			data: {
				"id": id
			},
			url: 'GetMSTCrimeHead',
			dataSrc: '',
			success: function (response) {

				dynamic(response);
			},
			error: function (xhr, status, error) {
				// var err = eval("(" + xhr.responseText + ")");
				console.log(xhr.responseText);
			}
		});

	}
	function GETMSTCrimeType() {
		$.ajax({
			type: "POST",
			url: 'GETMSTCrimeType--',
			dataSrc: '',
			success: function (response) {
				var ddlCaseType = document.getElementById('ddlCaseType');
				ddlCaseType.options.add(new Option('Select Case Type', '0'));
				for (var j = 0; j < response.length; j++) {

					ddlCaseType.options.add(new Option(response[j].crimeName, response[j].id));
				}
			},
			error: function (xhr, status, error) {
				// var err = eval("(" + xhr.responseText + ")");
				console.log(xhr.responseText);
			}
		});
	}

	function dynamic(jsonObj) {
		try {
			HeadJson = jsonObj;
			document.getElementById("que_content").innerHTML = '';
			//alert(jsonObj);
			//jsonObj = eval('(' + invocation.responseText + ')');

			//alert(jsonObj);
			var newdiv = '<div class="row">';
			var n = 1;
			for (i = 0; i < jsonObj.length; i++) {

				//mstCrimeHeadTypeID of Textbox
				if (jsonObj[i].mstCrimeHeadTypeID == 1) {

					newdiv += '<div class="col-sm-6"><div class="form-group">';
					newdiv += '<label id="lbl' + i + '">' + n + ") " + jsonObj[i].crimeHeadName + '</label>';

					newdiv += '<input  type="text" class="form-control" id="txt' + i + '" value="" placeholder="Answer"></div></div>';

				}

				//Type of RadioButton
				if (jsonObj[i].mstCrimeHeadTypeID == 2) {

					newdiv += '<div class="col-sm-6"><div class="form-group">';
					newdiv += '<label id="lbl' + i + '">' + n + ") " + jsonObj[i].crimeHeadName + '</label>';

					var radiobtn = jsonObj[i].value;

					for (var r = 0; r < radiobtn.length; r++) {
						newdiv += '<div class="form-check">';
						//newGroup = newGroup + '<input type="radio" style="color:blue;font-size: 20px; font-family: calibri;margin-left:10px;" class="margin" name="rc' + i + 'rc" id="rc' + i + "_" + r + '1" value=' + radiobtn[r] + '><label class="radiobutton " style="color:blue" for="rc' + i + "_" + r + '1">' + radiobtn[r] + '</label>';
						newdiv = newdiv + '<input class="form-check-input" type="radio"  name="rc' + i + 'rc" id="rc' + i + "_" + r + '1" value=' + radiobtn[r] + '><label class="form-check-label">' + radiobtn[r] + '</label>';
						newdiv += '</div>';
					}

					newdiv += '</div></div>';

				}

				//Type of Numric Textbox
				if (jsonObj[i].mstCrimeHeadTypeID == 3) {

					newdiv += '<div class="col-sm-6"><div class="form-group">';
					newdiv += '<label id="lbl' + i + '">' + n + ") " + jsonObj[i].crimeHeadName + '</label>';

					newdiv += '<input  type="number" class="form-control" id="txt' + i + '" value="" placeholder="Answer"></div></div>';

				}

				//Type of Dropdown
				if (jsonObj[i].mstCrimeHeadTypeID == 4) {

					newdiv += '<div class="col-sm-6"><div class="form-group">';
					newdiv += '<label id="lbl' + i + '">' + n + ") " + jsonObj[i].crimeHeadName + '</label>';

					var ddlvalue = jsonObj[i].value;
					//alert(ddlvalue);

					newdiv += '<select class="form-control select2" style="width: 100%;">';
					//newdiv += "<option value='---Select Sector----'>---Select Sector----</option>";
					for (var j = 0; j < ddlvalue.length; j++) {

						newdiv += "<option value='" + ddlvalue[j] + "'>" + ddlvalue[j] + "</option>";

					}

					newdiv += "</select></div></div>";

				}

				//Type of Calander
				if (jsonObj[i].mstCrimeHeadTypeID == 5) {

					newdiv += '<div class="col-sm-6"><div class="form-group">';

					newdiv += '<label id="lbl' + i + '">' + n + ") " + jsonObj[i].crimeHeadName + '</label>';

					newdiv += '<div class="input-group date" id="reservationdate" data-target-input="nearest">';
					newdiv += '<input type="text" class="form-control datetimepicker-input" data-target="#reservationdate" />';
					newdiv += '<div class="input-group-append" data-target="#reservationdate" data-toggle="datetimepicker">';
					newdiv += '<div class="input-group-text"><i class="fa fa-calendar"></i></div>';
					newdiv += '</div></div></div></div>';

				}
				//Type of Textarea
				if (jsonObj[i].mstCrimeHeadTypeID == 6) {

					newdiv += '<div class="col-sm-6"><div class="form-group">';
					newdiv += '<label id="lbl' + i + '">' + n + ") " + jsonObj[i].crimeHeadName + '</label>';

					newdiv += '<textarea  class="form-control" id="txt' + i + '" value="" placeholder="Answer"></textarea></div></div>';
				}
				//mstCrimeHeadTypeID of disable Textbox
				if (jsonObj[i].mstCrimeHeadTypeID == 7) {

					newdiv += '<div class="col-sm-6"><div class="form-group">';
					newdiv += '<label id="lbl' + i + '">' + n + ") " + jsonObj[i].crimeHeadName + '</label>';

					newdiv += '<input  type="text" class="form-control" id="txt' + i + '" value ="' + document.getElementById("txtcaseno").value + '" disabled></div></div>';

				}
				n++;
			}
			newdiv += '</div>'
			$("#que_content").append(newdiv);

			x.style.display = "block";

			//Date picker
			$('#reservationdate').datetimepicker({
				format: 'L'
			});
			//getdata();

		} catch (e) {

			alert(e);
		}
	}
	function submitfunc() {

		$.ajax({
			url: "InsertMSTCase",
			data: {
				"MSTCrimeTypeID": document.getElementById("ddlCaseType").value,
				"CaseNo": document.getElementById("txtcaseno").value,
				"ComplainerName": document.getElementById("txtcomplainername").value,
				"ComplainerContactNo": document.getElementById("txtcomplainercontactno").value,
				"ComplainerAddress": document.getElementById("txtcomplaineraddress").value,

			},
			cache: false,
			type: "POST",
			success: function (response) {
				if(response > 0)
				{
					addUpdateJsonfunc(response);

					toastr.success('Case Added');
					window.location.replace('/Crime/ViewCase');
					//alert("Case Added ");
				}
				else{
					toastr.error('Record is not Added');					//alert("Record is not Deleted");
				}
			},
			error: function (xhr, status, error) {
				// var err = eval("(" + xhr.responseText + ")");
				console.log(xhr.responseText);
			}
		});
	}

	function addUpdateJsonfunc(Caseid)
	{
		try{
		for (i = 0; i < HeadJson.length; i++)
			{
				$.ajax({
					url: "InsertUpdateMSTCrimeHeadLog",
					data: {

						"MSTCrimeTypeID": HeadJson[i].mstCrimeTypeID,
						"MSTCrimeHeadID": HeadJson[i].mstCrimeHeadID,
						"MSTCaseId": Caseid,
						"Value": document.getElementById("txt" + i + "").value,
					},
					cache: false,
					type: "POST",
					success: function (response) {
						//alert(response);
					},
					error: function (xhr, status, error) {
						// var err = eval("(" + xhr.responseText + ")");
						console.log(xhr.responseText);
					}
				});
			}
		}catch(e){alert(e);}
	}
	function getRandomArbitrary(min, max) {
		return Math.random() * (max - min) + min;
	}
</script>
}




